trigger:
- master

pool:
  name: Default  # your self-hosted agent

variables:
  buildConfiguration: 'Release'
  nugetPackageName: 'StringExtensionsLibrary.1.0.0.nupkg'
  outputDir: '$(Build.ArtifactStagingDirectory)'

steps:

# Install .NET SDK 8
- task: UseDotNet@2
  displayName: 'Install .NET SDK'
  inputs:
    packageType: 'sdk'
    version: '8.0.x'
    includePreviewVersions: true

# Install NuGet CLI
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet CLI'

# Restore NuGet packages
- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet packages'
  inputs:
    command: 'restore'
    projects: 'StringExtensionsLibrary/StringExtensionsLibrary.csproj'

# Build the solution
- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: 'StringExtensionsLibrary/StringExtensionsLibrary.csproj'
    arguments: '--configuration $(buildConfiguration)'

# Pack NuGet package
- task: DotNetCoreCLI@2
  displayName: 'Pack NuGet package'
  inputs:
    command: 'pack'
    packagesToPack: 'StringExtensionsLibrary/StringExtensionsLibrary.csproj'
    configuration: 'Release'
    outputDir: '$(outputDir)'

# Push to Azure Artifacts feed
- script: |
    echo "Pushing NuGet package to Azure Artifacts..."
    dotnet nuget push "$(outputDir)/$(nugetPackageName)" --source "string-extension-feed" --api-key azdo
  displayName: 'Push to Azure Artifacts feed'
  env:
    VSS_NUGET_EXTERNAL_FEED_ENDPOINTS: |
      {
        "endpointCredentials": [
          {
            "endpoint": "https://pkgs.dev.azure.com/jlenis/_packaging/string-extension-feed/nuget/v3/index.json",
            "username": "azdo",
            "password": "$(NUGET_PAT)"
          }
        ]
      }
